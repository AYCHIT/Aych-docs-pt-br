# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho, 2017
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-01 10:14+0900\n"
"PO-Revision-Date: 2017-02-16 17:47+0000\n"
"Last-Translator: Claudio Rogerio Carvalho Filho, 2017\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ":mod:`__main__` --- Ambiente de Script de NÃ­vel Superior"

#: ../../library/__main__.rst:10
msgid ""
"``'__main__'`` is the name of the scope in which top-level code executes. A "
"module's __name__ is set equal to ``'__main__'`` when read from standard "
"input, a script, or from an interactive prompt."
msgstr ""

#: ../../library/__main__.rst:14
msgid ""
"A module can discover whether or not it is running in the main scope by "
"checking its own ``__name__``, which allows a common idiom for conditionally "
"executing code in a module when it is run as a script or with ``python -m`` "
"but not when it is imported::"
msgstr ""

#: ../../library/__main__.rst:23
msgid ""
"For a package, the same effect can be achieved by including a ``__main__."
"py`` module, the contents of which will be executed when the module is run "
"with ``-m``."
msgstr ""
