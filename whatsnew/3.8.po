# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-03 18:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../whatsnew/3.8.rst:3
msgid "What's New In Python 3.8"
msgstr ""

#: ../whatsnew/3.8.rst:45
msgid "This article explains the new features in Python 3.8, compared to 3.7."
msgstr ""

#: ../whatsnew/3.8.rst:47
msgid "For full details, see the :ref:`changelog <changelog>`."
msgstr ""

#: ../whatsnew/3.8.rst:51
msgid ""
"Prerelease users should be aware that this document is currently in draft "
"form. It will be updated substantially as Python 3.8 moves towards release, "
"so it's worth checking back even after reading earlier versions."
msgstr ""

#: ../whatsnew/3.8.rst:57
msgid "Summary -- Release highlights"
msgstr ""

#: ../whatsnew/3.8.rst:68
msgid "New Features"
msgstr ""

#: ../whatsnew/3.8.rst:71
msgid "Parallel filesystem cache for compiled bytecode files"
msgstr ""

#: ../whatsnew/3.8.rst:73
msgid ""
"The new :envvar:`PYTHONPYCACHEPREFIX` setting (also available as :option:`-"
"X` ``pycache_prefix``) configures the implicit bytecode cache to use a "
"separate parallel filesystem tree, rather than the default ``__pycache__`` "
"subdirectories within each source directory."
msgstr ""

#: ../whatsnew/3.8.rst:79
msgid ""
"The location of the cache is reported in :data:`sys.pycache_prefix` (:const:"
"`None` indicates the default location in ``__pycache__`` subdirectories)."
msgstr ""

#: ../whatsnew/3.8.rst:83
msgid "(Contributed by Carl Meyer in :issue:`33499`.)"
msgstr ""

#: ../whatsnew/3.8.rst:87
msgid "Other Language Changes"
msgstr "Outras mudanças na Linguagem"

#: ../whatsnew/3.8.rst:89
msgid ""
"A :keyword:`continue` statement was illegal in the :keyword:`finally` clause "
"due to a problem with the implementation.  In Python 3.8 this restriction "
"was lifted. (Contributed by Serhiy Storchaka in :issue:`32489`.)"
msgstr ""

#: ../whatsnew/3.8.rst:94
msgid ""
"The :class:`int` type now has a new :meth:`~int.as_integer_ratio` method "
"compatible with the existing :meth:`float.as_integer_ratio` method. "
"(Contributed by Lisa Roach in :issue:`33073`.)"
msgstr ""

#: ../whatsnew/3.8.rst:98
msgid ""
"Added support of ``\\N{name}`` escapes in :mod:`regular expressions <re>`. "
"(Contributed by Jonathan Eunice and Serhiy Storchaka in :issue:`30688`.)"
msgstr ""

#: ../whatsnew/3.8.rst:101
msgid ""
"The syntax allowed for keyword names in function calls was further "
"restricted. In particular, ``f((keyword)=arg)`` is no longer allowed. It was "
"never intended to permit more than a bare name on the left-hand side of a "
"keyword argument assignment term. See :issue:`34641`."
msgstr ""

#: ../whatsnew/3.8.rst:106
msgid ""
"Iterable unpacking is now allowed without parentheses in :keyword:`yield` "
"and :keyword:`return` statements. (Contributed by David Cuthbert and Jordan "
"Chapman in :issue:`32117`.)"
msgstr ""

#: ../whatsnew/3.8.rst:110
msgid ""
"A backslash-character pair that is not a valid escape sequence generates a :"
"exc:`DeprecationWarning` since Python 3.6. In Python 3.8 it generates a :exc:"
"`SyntaxWarning` instead. (Contributed by Serhiy Storchaka in :issue:`32912`.)"
msgstr ""

#: ../whatsnew/3.8.rst:117
msgid "New Modules"
msgstr "Novos Módulos"

#: ../whatsnew/3.8.rst:119
msgid "None yet."
msgstr ""

#: ../whatsnew/3.8.rst:123
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../whatsnew/3.8.rst:126
msgid "asyncio"
msgstr ""

#: ../whatsnew/3.8.rst:128
msgid ""
"On Windows, the default event loop is now :class:`~asyncio."
"ProactorEventLoop`."
msgstr ""

#: ../whatsnew/3.8.rst:132
msgid "idlelib and IDLE"
msgstr ""

#: ../whatsnew/3.8.rst:134
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""

#: ../whatsnew/3.8.rst:141
msgid "The changes above have been backported to 3.7 maintenance releases."
msgstr ""

#: ../whatsnew/3.8.rst:145
msgid "os.path"
msgstr ""

#: ../whatsnew/3.8.rst:147
msgid ""
":mod:`os.path` functions that return a boolean result like :func:`~os.path."
"exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :func:`~os.path."
"isfile`, :func:`~os.path.islink`, and :func:`~os.path.ismount` now return "
"``False`` instead of raising :exc:`ValueError` or its subclasses :exc:"
"`UnicodeEncodeError` and :exc:`UnicodeDecodeError` for paths that contain "
"characters or bytes unrepresentable at the OS level. (Contributed by Serhiy "
"Storchaka in :issue:`33721`.)"
msgstr ""

#: ../whatsnew/3.8.rst:156
msgid "pathlib"
msgstr ""

#: ../whatsnew/3.8.rst:158
msgid ""
":mod:`pathlib.Path` methods that return a boolean result like :meth:"
"`~pathlib.Path.exists()`, :meth:`~pathlib.Path.is_dir()`, :meth:`~pathlib."
"Path.is_file()`, :meth:`~pathlib.Path.is_mount()`, :meth:`~pathlib.Path."
"is_symlink()`, :meth:`~pathlib.Path.is_block_device()`, :meth:`~pathlib.Path."
"is_char_device()`, :meth:`~pathlib.Path.is_fifo()`, :meth:`~pathlib.Path."
"is_socket()` now return ``False`` instead of raising :exc:`ValueError` or "
"its subclass :exc:`UnicodeEncodeError` for paths that contain characters "
"unrepresentable at the OS level. (Contributed by Serhiy Storchaka in :issue:"
"`33721`.)"
msgstr ""

#: ../whatsnew/3.8.rst:169
msgid "ssl"
msgstr ""

#: ../whatsnew/3.8.rst:171
msgid ""
"Added :attr:`SSLContext.post_handshake_auth` to enable and :meth:`ssl."
"SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 post-handshake "
"authentication. (Contributed by Christian Heimes in :issue:`34670`.)"
msgstr ""

#: ../whatsnew/3.8.rst:177
msgid "tkinter"
msgstr ""

#: ../whatsnew/3.8.rst:179
msgid ""
"Added methods :meth:`~tkinter.Spinbox.selection_from`, :meth:`~tkinter."
"Spinbox.selection_present`, :meth:`~tkinter.Spinbox.selection_range` and :"
"meth:`~tkinter.Spinbox.selection_to` in the :class:`tkinter.Spinbox` class. "
"(Contributed by Juliette Monsel in :issue:`34829`.)"
msgstr ""

#: ../whatsnew/3.8.rst:186
msgid ""
"Added method :meth:`~tkinter.Canvas.moveto` in the :class:`tkinter.Canvas` "
"class. (Contributed by Juliette Monsel in :issue:`23831`.)"
msgstr ""

#: ../whatsnew/3.8.rst:191
msgid "venv"
msgstr ""

#: ../whatsnew/3.8.rst:193
msgid ""
":mod:`venv` now includes an ``Activate.ps1`` script on all platforms for "
"activating virtual environments under PowerShell Core 6.1. (Contributed by "
"Brett Cannon in :issue:`32718`.)"
msgstr ""

#: ../whatsnew/3.8.rst:198
msgid "xml"
msgstr ""

#: ../whatsnew/3.8.rst:200
msgid ""
"As mitigation against DTD and external entity retrieval, the :mod:`xml.dom."
"minidom` and mod:`xml.sax` modules no longer process external entities by "
"default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""

#: ../whatsnew/3.8.rst:207
msgid "Optimizations"
msgstr "Otimizações"

#: ../whatsnew/3.8.rst:209
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-copy"
"\" syscalls on Linux, macOS and Solaris in order to copy the file more "
"efficiently. \"fast-copy\" means that the copying operation occurs within "
"the kernel, avoiding the use of userspace buffers in Python as in \"``outfd."
"write(infd.read())``\". On Windows :func:`shutil.copyfile` uses a bigger "
"default buffer size (1 MiB instead of 16 KiB) and a :func:`memoryview`-based "
"variant of :func:`shutil.copyfileobj` is used. The speedup for copying a 512 "
"MiB file within the same partition is about +26% on Linux, +50% on macOS and "
"+40% on Windows. Also, much less CPU cycles are consumed. See :ref:`shutil-"
"platform-dependent-efficient-copy-operations` section. (Contributed by "
"Giampaolo Rodola' in :issue:`25427`.)"
msgstr ""

#: ../whatsnew/3.8.rst:225
msgid ""
"The default protocol in the :mod:`pickle` module is now Protocol 4, first "
"introduced in Python 3.4.  It offers better performance and smaller size "
"compared to Protocol 3 available since Python 3.0."
msgstr ""

#: ../whatsnew/3.8.rst:229
msgid ""
"Removed one ``Py_ssize_t`` member from ``PyGC_Head``.  All GC tracked "
"objects (e.g. tuple, list, dict) size is reduced 4 or 8 bytes. (Contributed "
"by Inada Naoki in :issue:`33597`)"
msgstr ""

#: ../whatsnew/3.8.rst:233
msgid ""
":class:`uuid.UUID` now uses ``__slots__`` to reduce its memory footprint. "
"Note that this means that instances can no longer be weak-referenced and "
"that arbitrary attributes can no longer be added to them."
msgstr ""

#: ../whatsnew/3.8.rst:239
msgid "Build and C API Changes"
msgstr ""

#: ../whatsnew/3.8.rst:241
msgid ""
"The result of :c:func:`PyExceptionClass_Name` is now of type ``const char "
"*`` rather of ``char *``. (Contributed by Serhiy Storchaka in :issue:"
"`33818`.)"
msgstr ""

#: ../whatsnew/3.8.rst:245
msgid ""
"The duality of ``Modules/Setup.dist`` and ``Modules/Setup`` has been "
"removed.  Previously, when updating the CPython source tree, one had to "
"manually copy ``Modules/Setup.dist`` (inside the source tree) to ``Modules/"
"Setup`` (inside the build tree) in order to reflect any changes upstream.  "
"This was of a small benefit to packagers at the expense of a frequent "
"annoyance to developers following CPython development, as forgetting to copy "
"the file could produce build failures."
msgstr ""

#: ../whatsnew/3.8.rst:253
msgid ""
"Now the build system always reads from ``Modules/Setup`` inside the source "
"tree.  People who want to customize that file are encouraged to maintain "
"their changes in a git fork of CPython or as patch files, as they would do "
"for any other change to the source tree."
msgstr ""

#: ../whatsnew/3.8.rst:258
msgid "(Contributed by Antoine Pitrou in :issue:`32430`.)"
msgstr ""

#: ../whatsnew/3.8.rst:262
msgid "Deprecated"
msgstr "Descontinuado"

#: ../whatsnew/3.8.rst:264
msgid ""
"Deprecated methods ``getchildren()`` and ``getiterator()`` in the :mod:`~xml."
"etree.ElementTree` module emit now a :exc:`DeprecationWarning` instead of :"
"exc:`PendingDeprecationWarning`. They will be removed in Python 3.9. "
"(Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""

#: ../whatsnew/3.8.rst:270
msgid ""
"Passing an object that is not an instance of :class:`concurrent.futures."
"ThreadPoolExecutor` to :meth:`asyncio.loop.set_default_executor()` is "
"deprecated and will be prohibited in Python 3.9. (Contributed by Elvis "
"Pranskevichus in :issue:`34075`.)"
msgstr ""

#: ../whatsnew/3.8.rst:276
msgid ""
"The :meth:`__getitem__` methods of :class:`xml.dom.pulldom.DOMEventStream`, :"
"class:`wsgiref.util.FileWrapper` and :class:`fileinput.FileInput` have been "
"deprecated."
msgstr ""

#: ../whatsnew/3.8.rst:280
msgid ""
"Implementations of these methods have been ignoring their *index* parameter, "
"and returning the next item instead."
msgstr ""

#: ../whatsnew/3.8.rst:283
msgid "(Contributed by Berker Peksag in :issue:`9372`.)"
msgstr ""

#: ../whatsnew/3.8.rst:285
msgid ""
":mod:`ast` classes ``Num``, ``Str``, ``Bytes``, ``NameConstant`` and "
"``Ellipsis`` are considered deprecated and will be removed in future Python "
"versions. :class:`~ast.Constant` should be used instead. (Contributed by "
"Serhiy Storchaka in :issue:`32892`.)"
msgstr ""

#: ../whatsnew/3.8.rst:292
msgid "Removed"
msgstr ""

#: ../whatsnew/3.8.rst:294
msgid ""
"The ``pyvenv`` script has been removed in favor of ``python3.8 -m venv`` to "
"help eliminate confusion as to what Python interpreter the ``pyvenv`` script "
"is tied to. (Contributed by Brett Cannon in :issue:`25427`.)"
msgstr ""

#: ../whatsnew/3.8.rst:298
msgid ""
"``parse_qs``, ``parse_qsl``, and ``escape`` are removed from :mod:`cgi` "
"module.  They are deprecated from Python 3.2 or older."
msgstr ""

#: ../whatsnew/3.8.rst:301
msgid ""
"``filemode`` function is removed from :mod:`tarfile` module. It is not "
"documented and deprecated since Python 3.3."
msgstr ""

#: ../whatsnew/3.8.rst:304
msgid ""
"The :class:`~xml.etree.ElementTree.XMLParser` constructor no longer accepts "
"the *html* argument.  It never had effect and was deprecated in Python 3.4. "
"All other parameters are now :ref:`keyword-only <keyword-only_parameter>`. "
"(Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""

#: ../whatsnew/3.8.rst:309
msgid ""
"Removed the ``doctype()`` method of :class:`~xml.etree.ElementTree."
"XMLParser`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""

#: ../whatsnew/3.8.rst:314
msgid "Porting to Python 3.8"
msgstr ""

#: ../whatsnew/3.8.rst:316
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""

#: ../whatsnew/3.8.rst:321
msgid "Changes in Python behavior"
msgstr ""

#: ../whatsnew/3.8.rst:323
msgid ""
"Yield expressions (both ``yield`` and ``yield from`` clauses) are now "
"disallowed in comprehensions and generator expressions (aside from the "
"iterable expression in the leftmost :keyword:`for` clause). (Contributed by "
"Serhiy Storchaka in :issue:`10544`.)"
msgstr ""

#: ../whatsnew/3.8.rst:330
msgid "Changes in the Python API"
msgstr ""

#: ../whatsnew/3.8.rst:332
msgid ""
"The :meth:`~tkinter.ttk.Treeview.selection` method of the :class:`tkinter."
"ttk.Treeview` class no longer takes arguments.  Using it with arguments for "
"changing the selection was deprecated in Python 3.6.  Use specialized "
"methods like :meth:`~tkinter.ttk.Treeview.selection_set` for changing the "
"selection.  (Contributed by Serhiy Storchaka in :issue:`31508`.)"
msgstr ""

#: ../whatsnew/3.8.rst:338
msgid ""
"A :mod:`dbm.dumb` database opened with flags ``'r'`` is now read-only. :func:"
"`dbm.dumb.open` with flags ``'r'`` and ``'w'`` no longer creates a database "
"if it does not exist. (Contributed by Serhiy Storchaka in :issue:`32749`.)"
msgstr ""

#: ../whatsnew/3.8.rst:343
msgid ""
"The ``doctype()`` method defined in a subclass of :class:`~xml.etree."
"ElementTree.XMLParser` will no longer be called and will cause emitting a :"
"exc:`RuntimeWarning` instead of a :exc:`DeprecationWarning`. Define the :"
"meth:`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` method on a "
"target for handling an XML doctype declaration. (Contributed by Serhiy "
"Storchaka in :issue:`29209`.)"
msgstr ""

#: ../whatsnew/3.8.rst:350
msgid ""
"A :exc:`RuntimeError` is now raised when the custom metaclass doesn't "
"provide the ``__classcell__`` entry in the namespace passed to ``type."
"__new__``.  A :exc:`DeprecationWarning` was emitted in Python 3.6--3.7.  "
"(Contributed by Serhiy Storchaka in :issue:`23722`.)"
msgstr ""

#: ../whatsnew/3.8.rst:355
msgid ""
"The :class:`cProfile.Profile` class can now be used as a context manager. "
"(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr ""

#: ../whatsnew/3.8.rst:358
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-copy"
"\" syscalls (see :ref:`shutil-platform-dependent-efficient-copy-operations` "
"section)."
msgstr ""

#: ../whatsnew/3.8.rst:363
msgid ""
":func:`shutil.copyfile` default buffer size on Windows was changed from 16 "
"KiB to 1 MiB."
msgstr ""

#: ../whatsnew/3.8.rst:366
msgid ""
"``PyGC_Head`` struct is changed completely.  All code touched the struct "
"member should be rewritten.  (See :issue:`33597`)"
msgstr ""

#: ../whatsnew/3.8.rst:369
msgid ""
"Asyncio tasks can now be named, either by passing the ``name`` keyword "
"argument to :func:`asyncio.create_task` or the :meth:`~asyncio.loop."
"create_task` event loop method, or by calling the :meth:`~asyncio.Task."
"set_name` method on the task object. The task name is visible in the "
"``repr()`` output of :class:`asyncio.Task` and can also be retrieved using "
"the :meth:`~asyncio.Task.get_name` method."
msgstr ""

#: ../whatsnew/3.8.rst:376
msgid ""
"The :meth:`mmap.flush() <mmap.mmap.flush>` method now returns ``None`` on "
"success and raises an exception on error under all platforms.  Previously, "
"its behavior was platform-depended: a nonzero value was returned on success; "
"zero was returned on error under Windows.  A zero value was returned on "
"success; an exception was raised on error under Unix. (Contributed by Berker "
"Peksag in :issue:`2122`.)"
msgstr ""

#: ../whatsnew/3.8.rst:383
msgid ""
"The function :func:`math.factorial` no longer accepts arguments that are not "
"int-like. (Contributed by Pablo Galindo in :issue:`33083`.)"
msgstr ""

#: ../whatsnew/3.8.rst:386
msgid ""
":class:`uuid.UUID` now uses ``__slots__``, therefore instances can no longer "
"be weak-referenced and attributes can no longer be added."
msgstr ""

#: ../whatsnew/3.8.rst:389
msgid ""
":mod:`xml.dom.minidom` and mod:`xml.sax` modules no longer process external "
"entities by default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""

#: ../whatsnew/3.8.rst:394
msgid "CPython bytecode changes"
msgstr ""

#: ../whatsnew/3.8.rst:396
msgid ""
"The interpreter loop  has been simplified by moving the logic of unrolling "
"the stack of blocks into the compiler.  The compiler emits now explicit "
"instructions for adjusting the stack of values and calling the cleaning- up "
"code for :keyword:`break`, :keyword:`continue` and :keyword:`return`."
msgstr ""

#: ../whatsnew/3.8.rst:401
msgid ""
"Removed opcodes :opcode:`BREAK_LOOP`, :opcode:`CONTINUE_LOOP`, :opcode:"
"`SETUP_LOOP` and :opcode:`SETUP_EXCEPT`.  Added new opcodes :opcode:"
"`ROT_FOUR`, :opcode:`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` and :opcode:"
"`POP_FINALLY`.  Changed the behavior of :opcode:`END_FINALLY` and :opcode:"
"`WITH_CLEANUP_START`."
msgstr ""

#: ../whatsnew/3.8.rst:407
msgid ""
"(Contributed by Mark Shannon, Antoine Pitrou and Serhiy Storchaka in :issue:"
"`17611`.)"
msgstr ""

#: ../whatsnew/3.8.rst:410
msgid ""
"Added new opcode :opcode:`END_ASYNC_FOR` for handling exceptions raised when "
"awaiting a next item in an :keyword:`async for` loop. (Contributed by Serhiy "
"Storchaka in :issue:`33041`.)"
msgstr ""
