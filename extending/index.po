# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio, 2017
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-01 10:14+0900\n"
"PO-Revision-Date: 2017-02-16 17:42+0000\n"
"Last-Translator: Claudio Rogerio, 2017\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../extending/index.rst:5
msgid "Extending and Embedding the Python Interpreter"
msgstr "Estendendo e Incorporando o Intérprete de Python"

#: ../../extending/index.rst:7
msgid ""
"This document describes how to write modules in C or C++ to extend the "
"Python interpreter with new modules.  Those modules can not only define new "
"functions but also new object types and their methods.  The document also "
"describes how to embed the Python interpreter in another application, for "
"use as an extension language.  Finally, it shows how to compile and link "
"extension modules so that they can be loaded dynamically (at run time) into "
"the interpreter, if the underlying operating system supports this feature."
msgstr ""
"Neste documento descreveremos o desenvolvimento de módulos com C ou C++ para "
"adicionar recursos ao interpretador Python criando novos módulos. Esses "
"módulos podem não somente definir novas funções, mas também novos tipos de "
"objetos e seu conjunto de métodos. O documento também descreve como "
"incorporar o intérprete do Python em outro aplicativo, de forma a utiliza-lo "
"como sendo um idiota estendido. Por fim, estudaremos como podemos compilar e "
"fazer a vinculação dos módulos de extensão para que estes possam ser "
"carregados dinamicamente (em tempo de execução) pelo intérprete, caso o "
"sistema operacional subjacente suportar esse recurso."

#: ../../extending/index.rst:15
msgid ""
"This document assumes basic knowledge about Python.  For an informal "
"introduction to the language, see :ref:`tutorial-index`.  :ref:`reference-"
"index` gives a more formal definition of the language.  :ref:`library-index` "
"documents the existing object types, functions and modules (both built-in "
"and written in Python) that give the language its wide application range."
msgstr ""

#: ../../extending/index.rst:21
msgid ""
"For a detailed description of the whole Python/C API, see the separate :ref:"
"`c-api-index`."
msgstr ""

#: ../../extending/index.rst:26
msgid "Recommended third party tools"
msgstr ""

#: ../../extending/index.rst:28
msgid ""
"This guide only covers the basic tools for creating extensions provided as "
"part of this version of CPython. Third party tools like `Cython <http://"
"cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG <http://www."
"swig.org>`_ and `Numba <https://numba.pydata.org/>`_ offer both simpler and "
"more sophisticated approaches to creating C and C++ extensions for Python."
msgstr ""

#: ../../extending/index.rst:40
msgid ""
"`Python Packaging User Guide: Binary Extensions <https://packaging.python."
"org/guides/packaging-binary-extensions/>`_"
msgstr ""

#: ../../extending/index.rst:38
msgid ""
"The Python Packaging User Guide not only covers several available tools that "
"simplify the creation of binary extensions, but also discusses the various "
"reasons why creating an extension module may be desirable in the first place."
msgstr ""

#: ../../extending/index.rst:45
msgid "Creating extensions without third party tools"
msgstr ""

#: ../../extending/index.rst:47
msgid ""
"This section of the guide covers creating C and C++ extensions without "
"assistance from third party tools. It is intended primarily for creators of "
"those tools, rather than being a recommended way to create your own C "
"extensions."
msgstr ""

#: ../../extending/index.rst:63
msgid "Embedding the CPython runtime in a larger application"
msgstr ""

#: ../../extending/index.rst:65
msgid ""
"Sometimes, rather than creating an extension that runs inside the Python "
"interpreter as the main application, it is desirable to instead embed the "
"CPython runtime inside a larger application. This section covers some of the "
"details involved in doing that successfully."
msgstr ""
